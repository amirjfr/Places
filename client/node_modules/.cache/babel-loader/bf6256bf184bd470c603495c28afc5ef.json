{"ast":null,"code":"var _jsxFileName = \"/Users/amir/PersonalGitHub/Places/client/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport \"./Login.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router\";\nimport { loginUser } from \"../../redux/actions/userActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  const dispatch = useDispatch();\n  const currentUserID = useSelector(state => state.users.currentUserID);\n  const isLoggedIn = currentUserID !== null;\n  useEffect(() => {\n    if (loginAttempts > 0) {\n      currentUserID === null ? alert(\"Login failed\") : console.log(\"logged in\");\n    }\n  }, [currentUserID, loginAttempts]); // Login page inspired by: https://codepen.io/colorlib/pen/rxddKy\n\n  function handleLogin() {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password\");\n      return;\n    }\n\n    dispatch(loginUser(email, password));\n    setLoginAttempts(loginAttempts + 1);\n  }\n\n  return isLoggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n    to: {\n      pathname: \"/\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: email,\n          onInput: e => setEmail(e.target.value),\n          placeholder: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onInput: e => setPassword(e.target.value),\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleLogin,\n          children: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"message\",\n          children: \"Not registered? Create an account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"5tuRFUk2K8d0t9z+SulkJEoAwf0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/amir/PersonalGitHub/Places/client/src/components/Login/Login.js"],"names":["useDispatch","useSelector","useEffect","useState","Redirect","loginUser","Login","email","setEmail","password","setPassword","loginAttempts","setLoginAttempts","dispatch","currentUserID","state","users","isLoggedIn","alert","console","log","handleLogin","pathname","e","target","value"],"mappings":";;;AAAA,OAAO,aAAP;AAEA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,SAAT,QAA0B,iCAA1B;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,aAAD,EAAgBC,gBAAhB,IAAoCT,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAMU,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAMc,aAAa,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,KAAN,CAAYF,aAAxB,CAAjC;AAEA,QAAMG,UAAU,GAAGH,aAAa,KAAK,IAArC;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,aAAa,GAAG,CAApB,EAAuB;AACrBG,MAAAA,aAAa,KAAK,IAAlB,GAAyBI,KAAK,CAAC,cAAD,CAA9B,GAAiDC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAjD;AACD;AACF,GAJQ,EAIN,CAACN,aAAD,EAAgBH,aAAhB,CAJM,CAAT,CATe,CAef;;AACA,WAASU,WAAT,GAAuB;AACrB,QAAId,KAAK,KAAK,EAAV,IAAgBE,QAAQ,KAAK,EAAjC,EAAqC;AACnCS,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACA;AACD;;AACDL,IAAAA,QAAQ,CAACR,SAAS,CAACE,KAAD,EAAQE,QAAR,CAAV,CAAR;AACAG,IAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACD;;AAED,SAAOM,UAAU,gBACf,QAAC,QAAD;AAAU,IAAA,EAAE,EAAE;AAAEK,MAAAA,QAAQ,EAAE;AAAZ;AAAd;AAAA;AAAA;AAAA;AAAA,UADe,gBAGf;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,YAAhB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAEf,KAFT;AAGE,UAAA,OAAO,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAH1B;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,KAAK,EAAEhB,QAFT;AAGE,UAAA,OAAO,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAH7B;AAIE,UAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEJ,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAgBE;AAAG,UAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UAHF;AA0BD;;GAnDQf,K;UAIUN,W,EACKC,W;;;KALfK,K;AAqDT,eAAeA,KAAf","sourcesContent":["import \"./Login.css\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport { Redirect } from \"react-router\";\nimport { loginUser } from \"../../redux/actions/userActions\";\n\nfunction Login() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loginAttempts, setLoginAttempts] = useState(0);\n  const dispatch = useDispatch();\n  const currentUserID = useSelector((state) => state.users.currentUserID);\n\n  const isLoggedIn = currentUserID !== null;\n\n  useEffect(() => {\n    if (loginAttempts > 0) {\n      currentUserID === null ? alert(\"Login failed\") : console.log(\"logged in\");\n    }\n  }, [currentUserID, loginAttempts]);\n\n  // Login page inspired by: https://codepen.io/colorlib/pen/rxddKy\n  function handleLogin() {\n    if (email === \"\" || password === \"\") {\n      alert(\"Please fill out email and password\");\n      return;\n    }\n    dispatch(loginUser(email, password));\n    setLoginAttempts(loginAttempts + 1);\n  }\n\n  return isLoggedIn ? (\n    <Redirect to={{ pathname: \"/\" }} />\n  ) : (\n    <div className=\"login-page\">\n      <div className=\"login-container\">\n        <form className=\"login-form\">\n          <input\n            type=\"text\"\n            value={email}\n            onInput={(e) => setEmail(e.target.value)}\n            placeholder=\"email\"\n          />\n          <input\n            type=\"password\"\n            value={password}\n            onInput={(e) => setPassword(e.target.value)}\n            placeholder=\"password\"\n          />\n          <button type=\"button\" onClick={handleLogin}>\n            login\n          </button>\n          <p className=\"message\">Not registered? Create an account</p>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}
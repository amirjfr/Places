{"ast":null,"code":"var _jsxFileName = \"/Users/amir/Places/client/src/components/AddReview/AddReview.js\",\n    _s = $RefreshSig$();\n\nimport \"./AddReview.css\";\nimport { Avatar, Button, Col, Divider, Image, Rate, Row, Typography } from \"antd\";\nimport { addReview, editReview } from \"../../redux/actions/reviewActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst desc = [\"Terrible\", \"Bad\", \"Normal\", \"Good\", \"Wonderful\"];\n\nfunction AddReview() {\n  _s();\n\n  const dispatch = useDispatch();\n  const reviews = useSelector(state => state.reviews.allReviews);\n  const currentUserID = useSelector(state => state.users.currentUserID);\n  const currentPlaceID = useSelector(state => state.places.currentPlaceID);\n  const places = useSelector(state => state.places.allPlaces);\n  const categories = useSelector(state => state.categories.allCategories);\n  const [rateValue, setRateValue] = useState(0);\n  const [reviewExists, setReviewExists] = useState(false);\n  const [existingReview, setExistingReview] = useState({});\n\n  function checkIfReviewExists() {\n    reviews.forEach(element => {\n      if (element.user_id === currentUserID && element.place_id === currentPlaceID) {\n        setReviewExists(true);\n        setExistingReview(element);\n        setRateValue(element.rating);\n        return;\n      }\n    });\n  }\n\n  useEffect(checkIfReviewExists, [currentUserID, currentPlaceID, reviews]);\n  const {\n    Title\n  } = Typography;\n  let place = places.find(element => element.place_id === currentPlaceID);\n  let category = categories.find(element => element.category_id === place.category_id);\n\n  function handleRateChange(value) {\n    setRateValue(value);\n  }\n\n  function handleSubmitReview(value) {\n    checkIfReviewExists();\n    let index = reviews.findIndex(element => element.review_id === existingReview.review_id);\n    let newReview = {};\n\n    if (reviewExists) {\n      newReview = { ...existingReview,\n        rating: rateValue\n      };\n      dispatch(editReview(newReview, index));\n    } else {\n      newReview = {\n        review_id: reviews.length + 1,\n        user_id: currentUserID,\n        place_id: currentPlaceID,\n        rating: rateValue\n      };\n      dispatch(addReview(newReview));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      style: {\n        marginLeft: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        lg: 24,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          level: 2,\n          children: \"Add Review\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      style: {\n        marginTop: \"0\",\n        borderWidth: 5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        lg: 4,\n        md: 5,\n        sm: 24,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          preview: false,\n          src: place.ImageURL,\n          style: {\n            borderRadius: \"10px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 6,\n        md: 7,\n        sm: 24,\n        style: {\n          marginLeft: \"20px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"restaurantNameRate\",\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: place.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            style: {\n              color: \"#f56a00\",\n              backgroundColor: \"#fde3cf\"\n            },\n            children: category.emoji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), \" \", category.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        lg: 13,\n        md: 11,\n        sm: 24,\n        xs: 24,\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ratingText\",\n          children: \"Select Overall Rating\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Rate, {\n          style: {\n            fontSize: \"2.5vw\"\n          },\n          tooltips: desc,\n          onChange: handleRateChange,\n          value: rateValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/submittedReview\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button\",\n            type: \"primary\",\n            onClick: handleSubmitReview,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReview, \"a1pKGneIsn4K4t5FG4EMzAAnJxg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AddReview;\nexport default AddReview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReview\");","map":{"version":3,"sources":["/Users/amir/Places/client/src/components/AddReview/AddReview.js"],"names":["Avatar","Button","Col","Divider","Image","Rate","Row","Typography","addReview","editReview","useDispatch","useSelector","useEffect","useState","Link","desc","AddReview","dispatch","reviews","state","allReviews","currentUserID","users","currentPlaceID","places","allPlaces","categories","allCategories","rateValue","setRateValue","reviewExists","setReviewExists","existingReview","setExistingReview","checkIfReviewExists","forEach","element","user_id","place_id","rating","Title","place","find","category","category_id","handleRateChange","value","handleSubmitReview","index","findIndex","review_id","newReview","length","marginLeft","marginTop","borderWidth","ImageURL","borderRadius","name","color","backgroundColor","emoji","textAlign","fontSize"],"mappings":";;;AAAA,OAAO,iBAAP;AAEA,SACEA,MADF,EAEEC,MAFF,EAGEC,GAHF,EAIEC,OAJF,EAKEC,KALF,EAMEC,IANF,EAOEC,GAPF,EAQEC,UARF,QASO,MATP;AAUA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,mCAAtC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,IAAI,GAAG,CAAC,UAAD,EAAa,KAAb,EAAoB,QAApB,EAA8B,MAA9B,EAAsC,WAAtC,CAAb;;AAEA,SAASC,SAAT,GAAqB;AAAA;;AACnB,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,OAAO,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACD,OAAN,CAAcE,UAA1B,CAA3B;AACA,QAAMC,aAAa,GAAGV,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACG,KAAN,CAAYD,aAAxB,CAAjC;AACA,QAAME,cAAc,GAAGZ,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACK,MAAN,CAAaD,cAAzB,CAAlC;AACA,QAAMC,MAAM,GAAGb,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACK,MAAN,CAAaC,SAAzB,CAA1B;AACA,QAAMC,UAAU,GAAGf,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACO,UAAN,CAAiBC,aAA7B,CAA9B;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiB,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,EAAD,CAApD;;AAEA,WAASqB,mBAAT,GAA+B;AAC7BhB,IAAAA,OAAO,CAACiB,OAAR,CAAiBC,OAAD,IAAa;AAC3B,UACEA,OAAO,CAACC,OAAR,KAAoBhB,aAApB,IACAe,OAAO,CAACE,QAAR,KAAqBf,cAFvB,EAGE;AACAQ,QAAAA,eAAe,CAAC,IAAD,CAAf;AACAE,QAAAA,iBAAiB,CAACG,OAAD,CAAjB;AACAP,QAAAA,YAAY,CAACO,OAAO,CAACG,MAAT,CAAZ;AACA;AACD;AACF,KAVD;AAWD;;AAED3B,EAAAA,SAAS,CAACsB,mBAAD,EAAsB,CAACb,aAAD,EAAgBE,cAAhB,EAAgCL,OAAhC,CAAtB,CAAT;AAEA,QAAM;AAAEsB,IAAAA;AAAF,MAAYjC,UAAlB;AAEA,MAAIkC,KAAK,GAAGjB,MAAM,CAACkB,IAAP,CAAaN,OAAD,IAAaA,OAAO,CAACE,QAAR,KAAqBf,cAA9C,CAAZ;AACA,MAAIoB,QAAQ,GAAGjB,UAAU,CAACgB,IAAX,CACZN,OAAD,IAAaA,OAAO,CAACQ,WAAR,KAAwBH,KAAK,CAACG,WAD9B,CAAf;;AAIA,WAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/BjB,IAAAA,YAAY,CAACiB,KAAD,CAAZ;AACD;;AAED,WAASC,kBAAT,CAA4BD,KAA5B,EAAmC;AACjCZ,IAAAA,mBAAmB;AACnB,QAAIc,KAAK,GAAG9B,OAAO,CAAC+B,SAAR,CACTb,OAAD,IAAaA,OAAO,CAACc,SAAR,KAAsBlB,cAAc,CAACkB,SADxC,CAAZ;AAGA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIrB,YAAJ,EAAkB;AAChBqB,MAAAA,SAAS,GAAG,EACV,GAAGnB,cADO;AAEVO,QAAAA,MAAM,EAAEX;AAFE,OAAZ;AAIAX,MAAAA,QAAQ,CAACR,UAAU,CAAC0C,SAAD,EAAYH,KAAZ,CAAX,CAAR;AACD,KAND,MAMO;AACLG,MAAAA,SAAS,GAAG;AACVD,QAAAA,SAAS,EAAEhC,OAAO,CAACkC,MAAR,GAAiB,CADlB;AAEVf,QAAAA,OAAO,EAAEhB,aAFC;AAGViB,QAAAA,QAAQ,EAAEf,cAHA;AAIVgB,QAAAA,MAAM,EAAEX;AAJE,OAAZ;AAMAX,MAAAA,QAAQ,CAACT,SAAS,CAAC2C,SAAD,CAAV,CAAR;AACD;AACF;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,GAAD;AACE,MAAA,KAAK,EAAE;AACLE,QAAAA,UAAU,EAAE;AADP,OADT;AAAA,6BAKE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,EAAE,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,YADF,eAUE,QAAC,OAAD;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,GADN;AAELC,QAAAA,WAAW,EAAE;AAFR;AADT;AAAA;AAAA;AAAA;AAAA,YAVF,eAgBE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAmB,QAAA,EAAE,EAAE,EAAvB;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,OAAO,EAAE,KADX;AAEE,UAAA,GAAG,EAAEd,KAAK,CAACe,QAFb;AAGE,UAAA,KAAK,EAAE;AACLC,YAAAA,YAAY,EAAE;AADT;AAHT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,GAAD;AACE,QAAA,EAAE,EAAE,CADN;AAEE,QAAA,EAAE,EAAE,CAFN;AAGE,QAAA,EAAE,EAAE,EAHN;AAIE,QAAA,KAAK,EAAE;AACLJ,UAAAA,UAAU,EAAE;AADP,SAJT;AAAA,+BAQE;AAAK,UAAA,SAAS,EAAC,oBAAf;AAAA,kCACE;AAAA,sBAAIZ,KAAK,CAACiB;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAE;AAAEC,cAAAA,KAAK,EAAE,SAAT;AAAoBC,cAAAA,eAAe,EAAE;AAArC,aAAf;AAAA,sBACGjB,QAAQ,CAACkB;AADZ;AAAA;AAAA;AAAA;AAAA,kBAHF,EAKY,GALZ,EAMGlB,QAAQ,CAACe,IANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,cAVF,eA2BE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,EAAE,EAAE,EAAjB;AAAqB,QAAA,EAAE,EAAE,EAAzB;AAA6B,QAAA,EAAE,EAAE,EAAjC;AAAqC,QAAA,KAAK,EAAE;AAAEI,UAAAA,SAAS,EAAE;AAAb,SAA5C;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,IAAD;AACE,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WADT;AAEE,UAAA,QAAQ,EAAEhD,IAFZ;AAGE,UAAA,QAAQ,EAAE8B,gBAHZ;AAIE,UAAA,KAAK,EAAEjB;AAJT;AAAA;AAAA;AAAA;AAAA,gBAHF,eASE;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,kBAAT;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,SAAS,EAAC,QADZ;AAEE,YAAA,IAAI,EAAC,SAFP;AAGE,YAAA,OAAO,EAAEmB,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cA3BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmED;;GAjIQ/B,S;UACUN,W,EACDC,W,EACMA,W,EACCA,W,EACRA,W,EACIA,W;;;KANZK,S;AAmIT,eAAeA,SAAf","sourcesContent":["import \"./AddReview.css\";\n\nimport {\n  Avatar,\n  Button,\n  Col,\n  Divider,\n  Image,\n  Rate,\n  Row,\n  Typography,\n} from \"antd\";\nimport { addReview, editReview } from \"../../redux/actions/reviewActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\n\nconst desc = [\"Terrible\", \"Bad\", \"Normal\", \"Good\", \"Wonderful\"];\n\nfunction AddReview() {\n  const dispatch = useDispatch();\n  const reviews = useSelector((state) => state.reviews.allReviews);\n  const currentUserID = useSelector((state) => state.users.currentUserID);\n  const currentPlaceID = useSelector((state) => state.places.currentPlaceID);\n  const places = useSelector((state) => state.places.allPlaces);\n  const categories = useSelector((state) => state.categories.allCategories);\n\n  const [rateValue, setRateValue] = useState(0);\n  const [reviewExists, setReviewExists] = useState(false);\n  const [existingReview, setExistingReview] = useState({});\n\n  function checkIfReviewExists() {\n    reviews.forEach((element) => {\n      if (\n        element.user_id === currentUserID &&\n        element.place_id === currentPlaceID\n      ) {\n        setReviewExists(true);\n        setExistingReview(element);\n        setRateValue(element.rating);\n        return;\n      }\n    });\n  }\n\n  useEffect(checkIfReviewExists, [currentUserID, currentPlaceID, reviews]);\n\n  const { Title } = Typography;\n\n  let place = places.find((element) => element.place_id === currentPlaceID);\n  let category = categories.find(\n    (element) => element.category_id === place.category_id\n  );\n\n  function handleRateChange(value) {\n    setRateValue(value);\n  }\n\n  function handleSubmitReview(value) {\n    checkIfReviewExists();\n    let index = reviews.findIndex(\n      (element) => element.review_id === existingReview.review_id\n    );\n    let newReview = {};\n    if (reviewExists) {\n      newReview = {\n        ...existingReview,\n        rating: rateValue,\n      };\n      dispatch(editReview(newReview, index));\n    } else {\n      newReview = {\n        review_id: reviews.length + 1,\n        user_id: currentUserID,\n        place_id: currentPlaceID,\n        rating: rateValue,\n      };\n      dispatch(addReview(newReview));\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <Row\n        style={{\n          marginLeft: \"20px\",\n        }}\n      >\n        <Col lg={24}>\n          <Title level={2}>Add Review</Title>\n        </Col>\n      </Row>\n      <Divider\n        style={{\n          marginTop: \"0\",\n          borderWidth: 5,\n        }}\n      />\n      <Row>\n        <Col lg={4} md={5} sm={24}>\n          <Image\n            preview={false}\n            src={place.ImageURL}\n            style={{\n              borderRadius: \"10px\",\n            }}\n          />\n        </Col>\n        <Col\n          lg={6}\n          md={7}\n          sm={24}\n          style={{\n            marginLeft: \"20px\",\n          }}\n        >\n          <div className=\"restaurantNameRate\">\n            <b>{place.name}</b>\n            <br />\n            <Avatar style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}>\n              {category.emoji}\n            </Avatar>{\" \"}\n            {category.name}\n          </div>\n        </Col>\n        <Col lg={13} md={11} sm={24} xs={24} style={{ textAlign: \"center\" }}>\n          <span className=\"ratingText\">Select Overall Rating</span>\n          <br />\n          <Rate\n            style={{ fontSize: \"2.5vw\" }}\n            tooltips={desc}\n            onChange={handleRateChange}\n            value={rateValue}\n          />\n          <br />\n          <Link to=\"/submittedReview\">\n            <Button\n              className=\"button\"\n              type=\"primary\"\n              onClick={handleSubmitReview}\n            >\n              Submit\n            </Button>\n          </Link>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default AddReview;\n"]},"metadata":{},"sourceType":"module"}
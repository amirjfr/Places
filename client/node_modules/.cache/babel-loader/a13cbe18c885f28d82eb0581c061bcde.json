{"ast":null,"code":"const initialState = {\n  allUsers: [{\n    user_id: 1,\n    name: \"Sassan Shokoohi\",\n    email: \"sassan_shokoohi@me.com\",\n    password: \"1234\",\n    avatarURL: \"https://bit.ly/3q8x5LR\",\n    groups: [1]\n  }, {\n    user_id: 2,\n    name: \"Johnny Li\",\n    email: \"johnny@ualberta.ca\",\n    password: \"1234\",\n    avatarURL: \"https://bit.ly/3cL0K8m\",\n    groups: [1, 2]\n  }, {\n    user_id: 3,\n    name: \"Laura Rodgers\",\n    email: \"laurarodgers@gmail.com\",\n    password: \"1234\",\n    avatarURL: \"https://bit.ly/3d9N5I9\",\n    groups: [2]\n  }, {\n    user_id: 4,\n    name: \"Amir Jafarvand\",\n    email: \"amir.jafarvand@gmail.com\",\n    password: \"1234\",\n    avatarURL: \"https://bit.ly/3cL0K8m\",\n    groups: [1]\n  }, {\n    user_id: 5,\n    name: \"Test User\",\n    email: \"test@gmail.com\",\n    password: \"1234\",\n    avatarURL: \"https://bit.ly/3wSLFK4\",\n    groups: [1]\n  }],\n  currentUserID: null\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      const newUsers = [...state.allUsers];\n      newUsers.push(action.payload);\n      return { ...state,\n        allUsers: newUsers\n      };\n\n    case \"LOGIN_USER\":\n      const email = action.payload.email;\n      const pass = action.payload.password;\n      const user = state.allUsers.find(user => user.email === email && user.password === pass);\n\n      if (user) {\n        return { ...state,\n          currentUserID: user.user_id\n        };\n      } else {\n        return { ...state,\n          currentUserID: null\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;","map":{"version":3,"sources":["/Users/amir/PersonalGitHub/Places/client/src/redux/reducers/userReducer.js"],"names":["initialState","allUsers","user_id","name","email","password","avatarURL","groups","currentUserID","userReducer","state","action","type","newUsers","push","payload","pass","user","find"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CACR;AACEC,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE,wBAHT;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,SAAS,EAAE,wBALb;AAMEC,IAAAA,MAAM,EAAE,CAAC,CAAD;AANV,GADQ,EASR;AACEL,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,KAAK,EAAE,oBAHT;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,SAAS,EAAE,wBALb;AAMEC,IAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ;AANV,GATQ,EAiBR;AACEL,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,IAAI,EAAE,eAFR;AAGEC,IAAAA,KAAK,EAAE,wBAHT;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,SAAS,EAAE,wBALb;AAMEC,IAAAA,MAAM,EAAE,CAAC,CAAD;AANV,GAjBQ,EAyBR;AACEL,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,IAAI,EAAE,gBAFR;AAGEC,IAAAA,KAAK,EAAE,0BAHT;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,SAAS,EAAE,wBALb;AAMEC,IAAAA,MAAM,EAAE,CAAC,CAAD;AANV,GAzBQ,EAiCR;AACEL,IAAAA,OAAO,EAAE,CADX;AAEEC,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,KAAK,EAAE,gBAHT;AAIEC,IAAAA,QAAQ,EAAE,MAJZ;AAKEC,IAAAA,SAAS,EAAE,wBALb;AAMEC,IAAAA,MAAM,EAAE,CAAC,CAAD;AANV,GAjCQ,CADS;AA2CnBC,EAAAA,aAAa,EAAE;AA3CI,CAArB;;AA8CA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,aAAL;AACE,YAAMC,QAAQ,GAAG,CAAC,GAAGH,KAAK,CAACT,QAAV,CAAjB;AACAY,MAAAA,QAAQ,CAACC,IAAT,CAAcH,MAAM,CAACI,OAArB;AACA,aAAO,EACL,GAAGL,KADE;AAELT,QAAAA,QAAQ,EAAEY;AAFL,OAAP;;AAIF,SAAK,YAAL;AACE,YAAMT,KAAK,GAAGO,MAAM,CAACI,OAAP,CAAeX,KAA7B;AACA,YAAMY,IAAI,GAAGL,MAAM,CAACI,OAAP,CAAeV,QAA5B;AACA,YAAMY,IAAI,GAAGP,KAAK,CAACT,QAAN,CAAeiB,IAAf,CACVD,IAAD,IAAUA,IAAI,CAACb,KAAL,KAAeA,KAAf,IAAwBa,IAAI,CAACZ,QAAL,KAAkBW,IADzC,CAAb;;AAGA,UAAIC,IAAJ,EAAU;AACR,eAAO,EACL,GAAGP,KADE;AAELF,UAAAA,aAAa,EAAES,IAAI,CAACf;AAFf,SAAP;AAID,OALD,MAKO;AACL,eAAO,EACL,GAAGQ,KADE;AAELF,UAAAA,aAAa,EAAE;AAFV,SAAP;AAID;;AACH;AACE,aAAOE,KAAP;AA1BJ;AA4BD,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["const initialState = {\n  allUsers: [\n    {\n      user_id: 1,\n      name: \"Sassan Shokoohi\",\n      email: \"sassan_shokoohi@me.com\",\n      password: \"1234\",\n      avatarURL: \"https://bit.ly/3q8x5LR\",\n      groups: [1],\n    },\n    {\n      user_id: 2,\n      name: \"Johnny Li\",\n      email: \"johnny@ualberta.ca\",\n      password: \"1234\",\n      avatarURL: \"https://bit.ly/3cL0K8m\",\n      groups: [1, 2],\n    },\n    {\n      user_id: 3,\n      name: \"Laura Rodgers\",\n      email: \"laurarodgers@gmail.com\",\n      password: \"1234\",\n      avatarURL: \"https://bit.ly/3d9N5I9\",\n      groups: [2],\n    },\n    {\n      user_id: 4,\n      name: \"Amir Jafarvand\",\n      email: \"amir.jafarvand@gmail.com\",\n      password: \"1234\",\n      avatarURL: \"https://bit.ly/3cL0K8m\",\n      groups: [1],\n    },\n    {\n      user_id: 5,\n      name: \"Test User\",\n      email: \"test@gmail.com\",\n      password: \"1234\",\n      avatarURL: \"https://bit.ly/3wSLFK4\",\n      groups: [1],\n    },\n  ],\n  currentUserID: null,\n};\n\nconst userReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CREATE_USER\":\n      const newUsers = [...state.allUsers];\n      newUsers.push(action.payload);\n      return {\n        ...state,\n        allUsers: newUsers,\n      };\n    case \"LOGIN_USER\":\n      const email = action.payload.email;\n      const pass = action.payload.password;\n      const user = state.allUsers.find(\n        (user) => user.email === email && user.password === pass\n      );\n      if (user) {\n        return {\n          ...state,\n          currentUserID: user.user_id,\n        };\n      } else {\n        return {\n          ...state,\n          currentUserID: null,\n        };\n      }\n    default:\n      return state;\n  }\n};\n\nexport default userReducer;\n"]},"metadata":{},"sourceType":"module"}
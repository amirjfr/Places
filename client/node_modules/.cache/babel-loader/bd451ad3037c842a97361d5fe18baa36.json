{"ast":null,"code":"var _jsxFileName = \"/Users/amir/Places/client/src/components/Category/Category.js\",\n    _s = $RefreshSig$();\n\nimport \"./Category.css\";\nimport { Avatar, Card } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { setCategory } from \"../../redux/actions/categoryActions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Category({\n  category\n}) {\n  _s();\n\n  const currentGroupID = useSelector(state => state.groups.currentGroupID);\n  const places = useSelector(state => state.places.allPlaces);\n  let numPlaces = 0;\n  places.forEach(place => {\n    if (place.group_id === currentGroupID && place.category_id === category.category_id) {\n      numPlaces++;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Link, {\n    to: \"/categoryview\",\n    onClick: () => {\n      dispatch(setCategory(groupData.group_id));\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        margin: 16\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"category\",\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          style: {\n            color: \"#f56a00\",\n            backgroundColor: \"#fde3cf\"\n          },\n          children: category.emoji\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"category-name\",\n          children: category.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"num-of-places\",\n        children: [numPlaces, \" Places\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Category, \"SS/x1D6aXjd80LKCkGszTz9KzOg=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Category;\nexport default Category;\n\nvar _c;\n\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"sources":["/Users/amir/Places/client/src/components/Category/Category.js"],"names":["Avatar","Card","Link","useSelector","setCategory","Category","category","currentGroupID","state","groups","places","allPlaces","numPlaces","forEach","place","group_id","category_id","dispatch","groupData","margin","color","backgroundColor","emoji","name"],"mappings":";;;AAAA,OAAO,gBAAP;AAEA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AAEA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,qCAA5B;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAAgC;AAAA;;AAC9B,QAAMC,cAAc,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaF,cAAvB,CAAlC;AACA,QAAMG,MAAM,GAAGP,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACE,MAAN,CAAaC,SAAvB,CAA1B;AACA,MAAIC,SAAS,GAAG,CAAhB;AACAF,EAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAI;AACtB,QAAIA,KAAK,CAACC,QAAN,KAAmBR,cAAnB,IAAqCO,KAAK,CAACE,WAAN,KAAsBV,QAAQ,CAACU,WAAxE,EAAqF;AACnFJ,MAAAA,SAAS;AACV;AACF,GAJD;AAKA,sBACE,QAAC,IAAD;AAAM,IAAA,EAAE,EAAC,eAAT;AAAyB,IAAA,OAAO,EAAE,MAAM;AACtCK,MAAAA,QAAQ,CAACb,WAAW,CAACc,SAAS,CAACH,QAAX,CAAZ,CAAR;AACD,KAFD;AAAA,2BAGE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAE;AAAEI,QAAAA,MAAM,EAAE;AAAV,OAAb;AAAA,8BACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,KAAK,EAAE,SAAT;AAAoBC,YAAAA,eAAe,EAAE;AAArC,WAAf;AAAA,oBACGf,QAAQ,CAACgB;AADZ;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAM,UAAA,SAAS,EAAC,eAAhB;AAAA,oBAAiChB,QAAQ,CAACiB;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAM,QAAA,SAAS,EAAC,eAAhB;AAAA,mBAAiCX,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzBQP,Q;UACgBF,W,EACRA,W;;;KAFRE,Q;AA2BT,eAAeA,QAAf","sourcesContent":["import \"./Category.css\";\n\nimport { Avatar, Card } from \"antd\";\n\nimport { Link } from \"react-router-dom\";\nimport { useSelector } from 'react-redux';\nimport { setCategory } from \"../../redux/actions/categoryActions\";\n\nfunction Category({ category }) {\n  const currentGroupID = useSelector(state => state.groups.currentGroupID);\n  const places = useSelector(state => state.places.allPlaces);\n  let numPlaces = 0;\n  places.forEach(place => {\n    if (place.group_id === currentGroupID && place.category_id === category.category_id) {\n      numPlaces++;\n    }\n  });\n  return (\n    <Link to=\"/categoryview\" onClick={() => {\n      dispatch(setCategory(groupData.group_id));\n    }}>\n      <Card style={{ margin: 16 }}>\n        <span className=\"category\">\n          <Avatar style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}>\n            {category.emoji}\n          </Avatar>\n          <span className=\"category-name\">{category.name}</span>\n        </span>\n\n        <span className=\"num-of-places\">{numPlaces} Places</span>\n      </Card>\n    </Link>\n  );\n}\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}
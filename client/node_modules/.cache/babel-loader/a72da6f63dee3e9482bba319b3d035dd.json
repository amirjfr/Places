{"ast":null,"code":"const initialState = {\n  allReviews: [{\n    review_id: 1,\n    user_id: 1,\n    place_id: 1,\n    rating: 3\n  }, {\n    review_id: 2,\n    user_id: 2,\n    place_id: 2,\n    rating: 4\n  }]\n};\n\nconst reviewReducer = (state = initialState, action) => {\n  let newReviews = [];\n\n  switch (action.type) {\n    case \"ADD_REVIEW\":\n      newReviews = [...state.allReviews];\n      newReviews.push(action.payload);\n      return { ...state,\n        allReviews: newReviews\n      };\n\n    case \"EDIT_REVIEW\":\n      newReviews = [...state.allReviews];\n      newReviews[action.payload.index] = action.payload.newReview;\n      return { ...state,\n        allReviews: newReviews\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reviewReducer;","map":{"version":3,"sources":["/Users/amir/Places/client/src/redux/reducers/reviewReducer.js"],"names":["initialState","allReviews","review_id","user_id","place_id","rating","reviewReducer","state","action","newReviews","type","push","payload","index","newReview"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,UAAU,EAAE,CACV;AACEC,IAAAA,SAAS,EAAE,CADb;AAEEC,IAAAA,OAAO,EAAE,CAFX;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADU,EAOV;AACEH,IAAAA,SAAS,EAAE,CADb;AAEEC,IAAAA,OAAO,EAAE,CAFX;AAGEC,IAAAA,QAAQ,EAAE,CAHZ;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAPU;AADO,CAArB;;AAiBA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAkC;AACpD,MAAIC,UAAU,GAAG,EAAjB;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAK,YAAL;AACED,MAAAA,UAAU,GAAG,CAAC,GAAGF,KAAK,CAACN,UAAV,CAAb;AACAQ,MAAAA,UAAU,CAACE,IAAX,CAAgBH,MAAM,CAACI,OAAvB;AACA,aAAO,EACL,GAAGL,KADE;AAELN,QAAAA,UAAU,EAAEQ;AAFP,OAAP;;AAIF,SAAK,aAAL;AACEA,MAAAA,UAAU,GAAG,CAAC,GAAGF,KAAK,CAACN,UAAV,CAAb;AACAQ,MAAAA,UAAU,CAACD,MAAM,CAACI,OAAP,CAAeC,KAAhB,CAAV,GAAmCL,MAAM,CAACI,OAAP,CAAeE,SAAlD;AACA,aAAO,EACL,GAAGP,KADE;AAELN,QAAAA,UAAU,EAAEQ;AAFP,OAAP;;AAIF;AACE,aAAOF,KAAP;AAhBJ;AAkBD,CApBH;;AAsBA,eAAeD,aAAf","sourcesContent":["const initialState = {\n  allReviews: [\n    {\n      review_id: 1,\n      user_id: 1,\n      place_id: 1,\n      rating: 3,\n    },\n    {\n      review_id: 2,\n      user_id: 2,\n      place_id: 2,\n      rating: 4,\n    },\n  ]\n};\n\nconst reviewReducer = (state = initialState, action) => {\n    let newReviews = [];\n    switch (action.type) {\n      case \"ADD_REVIEW\":\n        newReviews = [...state.allReviews]\n        newReviews.push(action.payload)\n        return {\n          ...state,\n          allReviews: newReviews,\n        };\n      case \"EDIT_REVIEW\":\n        newReviews = [...state.allReviews]\n        newReviews[action.payload.index] = action.payload.newReview;\n        return {\n          ...state,\n          allReviews: newReviews,\n        };\n      default:\n        return state;\n    }\n  };\n\nexport default reviewReducer;"]},"metadata":{},"sourceType":"module"}